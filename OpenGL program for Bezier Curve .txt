#include<windows.h>
#include<GL/glu.h>
#include<GL/glut.h>
#include<math.h>

void Draw()
{
	GLfloat x[4],y[4];
	GLfloat xt[200],yt[200],t;
	int i;
	glClear(GL_COLOR_BUFFER_BIT);
	x[0]=100;x[1]=200; x[2]=200;x[3]=300;
	y[0]=450;y[1]=350; y[2]=550;y[3]=450;

	for(i=0,t=0;t<=1;i++, t=t+0.01)
	{	//Blending function
		xt[i] = pow(1-t,3)*x[0]+3*t*pow(1-t,2)*x[1]+3*pow(t,2)*(1-t)*x[2]+pow(t,3)*x[3];

		yt[i] = pow(1-t,3)*y[0]+3*t*pow(1-t,2)*y[1]+3*pow(t,2)*(1-t)*y[2]+pow(t,3)*y[3];
	}
	glPointSize(3);
	glBegin(GL_POINTS);
	for(i=0;i<200;i++)
	{
		glVertex2i(xt[i],yt[i]);
	}	
	glEnd();
	glFlush();
}
void MyInit ()
{
	glMatrixMode (GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0, 500, 0, 500);
	glMatrixMode(GL_MODELVIEW);
}

int main (int argC, char *argV[])
{

	glutInit (&argC, argV);	
	glutInitWindowSize (500, 500);
	glutInitWindowPosition (100, 100);
	glutInitDisplayMode (GLUT_RGB |	GLUT_SINGLE);
	glutCreateWindow("Bezier Curve");
	MyInit();
	glutDisplayFunc(Draw);
	glutMainLoop();
	return 0;
}